<UserControl x:Class="Face3DReconstruction.Views.ImageObjectListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Face3DReconstruction.Views"
             xmlns:models="clr-namespace:Face3DReconstruction.Models"
             xmlns:common="clr-namespace:Face3DReconstruction.Common" 
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:vml="clr-namespace:Face3DReconstruction.ViewModelLocator" 
             vml:ViewModelLocator.AutoHookedUpViewModel="True" 
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
    </UserControl.Resources>
    <Grid>        
        <DataGrid x:Name="dgInputFiles" Margin="2,2,2,2" VerticalAlignment="Stretch" 
                          IsReadOnly="True" AutoGenerateColumns="False" 
                          ItemsSource="{Binding ImageObjectListTask.Result}"
                          SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay}"
              IsEnabled="{Binding IsEnabledDataGrid}">
            <behaviors:Interaction.Triggers>
                <behaviors:EventTrigger EventName="SelectionChanged">
                    <behaviors:InvokeCommandAction Command="{Binding SelectItemsCommand}" CommandParameter="{Binding Path=SelectedItems, RelativeSource={RelativeSource FindAncestor,
                                AncestorType={x:Type DataGrid}}}"/>
                </behaviors:EventTrigger>
            </behaviors:Interaction.Triggers>
            <DataGrid.Columns>
                <DataGridTextColumn Header="No." Width="*" Binding="{Binding No}"/>
                <DataGridTextColumn Header="FileName" Width="4*" Binding="{Binding FileName}"/>
                <DataGridTemplateColumn Width="*" Header="Org">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Margin="2,2,2,2"
                                Command="{Binding DataContext.RequestOriginalMeshCommand, RelativeSource={RelativeSource FindAncestor,
                                AncestorType={x:Type UserControl}}}"
                                CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}">                               
                                <Button.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=MeshInfoDict[(common:MESH_TYPE)ORIGINAL].ProcessMeshStatus}" Value="NONE">
                                                <Setter Property="Button.Background" Value="Red" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=MeshInfoDict[(common:MESH_TYPE)ORIGINAL].ProcessMeshStatus}" Value="PROCESSING">
                                                <Setter Property="Button.Background" Value="Green" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=MeshInfoDict[(common:MESH_TYPE)ORIGINAL].ProcessMeshStatus}" Value="FINISH">
                                                <Setter Property="Button.Background" Value="Blue" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="*" Header="AI">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Margin="2,2,2,2"
                                Command="{Binding DataContext.RequestAIMeshCommand, RelativeSource={RelativeSource FindAncestor,
                                AncestorType={x:Type UserControl}}}"
                                CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}">
                                <Button.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=MeshInfoDict[(common:MESH_TYPE)AI].ProcessMeshStatus}" Value="NONE">
                                                <Setter Property="Button.Background" Value="Red" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=MeshInfoDict[(common:MESH_TYPE)AI].ProcessMeshStatus}" Value="PROCESSING">
                                                <Setter Property="Button.Background" Value="Green" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=MeshInfoDict[(common:MESH_TYPE)AI].ProcessMeshStatus}" Value="FINISH">
                                                <Setter Property="Button.Background" Value="Blue" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="*" Header="Eval">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Margin="2,2,2,2"
                                Command="{Binding DataContext.RequestEvalResultCommand, RelativeSource={RelativeSource FindAncestor,
                                AncestorType={x:Type UserControl}}}"
                                CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}">
                                <Button.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ProcessStatusEval}" Value="NONE">
                                                <Setter Property="Button.Background" Value="Red" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ProcessStatusEval}" Value="PROCESSING">
                                                <Setter Property="Button.Background" Value="Green" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ProcessStatusEval}" Value="FINISH">
                                                <Setter Property="Button.Background" Value="Blue" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Visibility="{Binding ProgressBarVisibility, Converter={StaticResource BoolToVisibility}}" Opacity="0.8">
            <ProgressBar Minimum="0" Maximum="100" Value="{Binding LoadingFilesPercentage}"></ProgressBar>
            <TextBlock Text="{Binding LoadingFilesPercentage, StringFormat={}{0:0}%}" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Grid>

    </Grid> 
</UserControl>
